import{r}from"./index-CA7vLNFI.js";function y(...n){return n.filter(e=>e!==null&&typeof e<"u").reduce((e,t)=>{if(typeof t!="function")throw new Error("Invalid Argument Type, must only provide functions, undefined, or null.");return e===void 0?t:function(...u){e.apply(this,u),t.apply(this,u)}},void 0)}function f(n){const e=r.useRef(n);return r.useEffect(()=>{e.current=n}),r.useMemo(()=>(...t)=>{var o;return(o=e.current)==null?void 0:o.call(e,...t)},[])}function h({defaultProp:n,onChange:e}){const t=r.useState(n),[o]=t,u=r.useRef(o),c=f(e);return r.useEffect(()=>{u.current!==o&&(c(o),u.current=o)},[o,u,c]),t}function m({prop:n,defaultProp:e,onChange:t=()=>{}}){const[o,u]=h({defaultProp:e,onChange:t}),c=n!==void 0,a=c?n:o,l=f(t),d=r.useCallback(s=>{const v=s;if(c){const i=typeof s=="function"?v(n):s;i!==n&&l(i)}else u(s)},[c,n,u,l]);return[a,d]}export{y as c,m as u};
